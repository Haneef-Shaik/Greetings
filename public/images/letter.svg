<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   version="1.1"
   id="svg9"
   width="512"
   height="512"
   viewBox="0 0 512 512"
   sodipodi:docname="letter.svg"
   inkscape:version="1.1 (c68e22c387, 2021-05-23)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs13">
    <linearGradient
       id="linearGradient4602"
       inkscape:swatch="solid">
      <stop
         style="stop-color:#589822;stop-opacity:1;"
         offset="0"
         id="stop4600" />
    </linearGradient>
    <meshgradient
       inkscape:collect="always"
       id="meshgradient9719"
       gradientUnits="userSpaceOnUse"
       x="205.31323"
       y="201.36742">
      <meshrow
         id="meshrow9721">
        <meshpatch
           id="meshpatch9723">
          <stop
             path="c 44.8537,0  89.7075,0  134.561,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop9725" />
          <stop
             path="c 0,40.527  0,81.054  0,121.581"
             style="stop-color:#ff0000;stop-opacity:1"
             id="stop9727" />
          <stop
             path="c -44.8537,0  -89.7075,0  -134.561,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop9729" />
          <stop
             path="c 0,-40.527  0,-81.054  0,-121.581"
             style="stop-color:#ff0000;stop-opacity:1"
             id="stop9731" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <sodipodi:namedview
     id="namedview11"
     pagecolor="#ffffff"
     bordercolor="#666666"
     borderopacity="1.0"
     inkscape:pageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     showgrid="false"
     inkscape:snap-bbox="false"
     inkscape:snap-global="true"
     inkscape:snap-nodes="false"
     inkscape:zoom="1.056517"
     inkscape:cx="213.43717"
     inkscape:cy="447.22423"
     inkscape:window-width="1920"
     inkscape:window-height="1057"
     inkscape:window-x="-8"
     inkscape:window-y="-8"
     inkscape:window-maximized="1"
     inkscape:current-layer="g15" />
  <g
     inkscape:groupmode="layer"
     inkscape:label="Image"
     id="g15"
     style="display:inline">
    <path
       style="display:inline;fill:#f29c60;stroke-width:0.906656"
       d="M 406.23436,435.10748 C 404.93053,434.72831 322.45797,411.36023 222.962,383.1784 123.46603,354.99659 40.798766,331.34235 39.256956,330.61345 c -3.51752,-1.66296 -5.68011,-5.40371 -5.68011,-9.82523 0,-3.75421 72.324524,-218.54676 74.715384,-221.893029 1.93156,-2.703421 6.52829,-4.74944 10.59193,-4.714502 3.84852,0.03309 371.0556,103.783331 374.38682,105.778791 3.02751,1.81354 4.94246,5.52828 4.94246,9.5877 0,3.27273 -71.54691,216.54071 -74.18177,221.12204 -2.59459,4.51129 -10.64379,6.51859 -17.79731,4.43826 z m 10.43062,-12.11195 c 0,-1.2311 -64.34791,-62.88179 -106.47503,-102.01198 l -22.55595,-20.95134 5.41359,-4.21237 c 7.52667,-5.85658 15.67667,-15.49348 19.96004,-23.60158 l 3.61824,-6.84908 54.52368,-16.60308 c 51.32994,-15.63056 106.69878,-33.0494 113.53362,-35.71726 1.89255,-0.73874 2.79883,-1.57145 2.37059,-2.17816 -0.88124,-1.24847 -26.08852,5.99881 -107.53353,30.91672 l -61.32482,18.76217 -0.98095,-3.56153 c -1.08417,-3.93632 -4.75823,-7.63986 -9.12273,-9.19593 -4.41646,-1.5746 -14.46144,-1.17232 -20.72003,0.82978 -6.51202,2.08317 -11.10232,4.55234 -16.04925,8.63304 -1.96952,1.62465 -3.69442,2.80168 -3.8331,2.61562 -0.13868,-0.18606 -0.77969,-2.23867 -1.42445,-4.56134 -4.11368,-14.8188 -16.84766,-26.55182 -28.817,-26.55182 -3.86596,0 -5.10535,0.44942 -8.05534,2.92098 l -3.4864,2.92097 -33.27103,-40.41429 c -32.28245,-39.21345 -57.51282,-69.27919 -69.06978,-82.30687 -3.67391,-4.14144 -5.95571,-6.05467 -6.56106,-5.50125 -0.60534,0.55341 2.6355,5.32438 9.31865,13.71839 15.13754,19.01265 55.74096,68.47178 78.25733,95.32546 l 19.70986,23.50653 -1.06529,3.36729 c -1.86518,5.89573 -1.31232,23.17882 1.02081,31.91143 1.13715,4.25622 1.73761,7.99513 1.33435,8.30868 -0.40327,0.31355 -13.32107,2.80324 -28.70623,5.53265 -54.90446,9.74034 -151.198094,28.36924 -152.421014,29.48726 -0.32614,0.29816 -0.12966,0.96568 0.43661,1.48338 0.74061,0.67708 14.694965,-1.52981 49.719272,-7.86314 42.112312,-7.61501 125.332502,-23.35139 131.297702,-24.82749 1.7203,-0.42569 2.42141,0.31122 4.89632,5.14631 3.54965,6.93473 9.07924,14.46951 14.56041,19.84039 l 4.13791,4.05466 7.11178,-1.6706 c 3.91148,-0.91883 11.88827,-3.85517 17.72619,-6.5252 l 10.61441,-4.8546 9.77271,9.3675 c 34.6352,33.19914 54.24037,51.81305 74.25504,70.50065 12.51793,11.68792 27.82558,25.99874 34.01702,31.80182 6.89385,6.46143 11.76292,10.37363 12.562,10.0933 0.71767,-0.25177 1.30485,-0.7405 1.30485,-1.08607 z M 306.42888,231.71989 c 17.37216,-3.28051 32.5712,-12.90526 40.56495,-25.68763 1.27787,-2.04338 2.32855,-4.00085 2.33483,-4.34993 0.007,-0.34908 -3.93562,3.00855 -8.75978,7.46139 -7.60555,7.02016 -9.96836,8.61988 -17.77946,12.03749 -11.13996,4.87408 -17.03564,6.17778 -27.97302,6.18562 -27.77201,0.0199 -52.55125,-20.20153 -57.51877,-46.93898 -0.64222,-3.45675 -1.51118,-6.285 -1.93101,-6.285 -1.30419,0 -0.83824,10.64155 0.70372,16.07219 4.62365,16.28408 16.64113,29.80762 33.14363,37.2973 11.78456,5.34845 23.91218,6.7196 37.21491,4.20755 z m 8.71001,-32.8626 c 3.08819,-6.78182 6.68463,-19.24185 6.69564,-23.19737 0.0274,-9.84213 -10.75734,13.62408 -12.05205,26.22365 -0.52366,5.09605 -0.43404,5.52552 0.9373,4.49161 0.83398,-0.62878 2.82258,-4.01182 4.41911,-7.51789 z m -45.75827,-9.1547 c 4.61323,-8.62362 9.47097,-25.95522 7.96454,-28.41616 -1.17686,-1.92253 -4.38071,3.62913 -8.12509,14.07919 -3.8747,10.81374 -5.32891,19.16609 -3.23341,18.57132 0.73196,-0.20775 2.25924,-2.11321 3.39396,-4.23435 z"
       id="path143" />
    <path
       style="display:none;fill:#cf744a;stroke-width:0.906656"
       d="m 404.79411,406.40508 -10.41445,-9.75259 10.66767,9.52109 c 9.90856,8.84356 11.09827,9.9841 10.41445,9.9841 -0.13927,0 -4.93973,-4.38867 -10.66767,-9.7526 z m 2.81626,-1.73379 -3.74833,-3.68432 4.03001,3.42681 c 3.74787,3.18689 4.46575,3.94182 3.74833,3.94182 -0.15492,0 -1.96842,-1.65794 -4.03001,-3.68431 z m -15.1718,-14.73726 -3.74834,-3.68431 4.03001,3.4268 c 3.74787,3.18689 4.46575,3.94183 3.74834,3.94183 -0.15493,0 -1.96843,-1.65795 -4.03001,-3.68432 z m -19.89807,-19.07174 -5.65974,-5.41811 5.92648,5.17425 c 3.25957,2.84583 5.92649,5.28398 5.92649,5.41811 0,0.64055 -0.93581,-0.14129 -6.19323,-5.17425 z m -12.79026,-6.50174 -8.98953,-8.45225 9.24532,8.21841 c 5.08493,4.52012 9.24532,8.32364 9.24532,8.45225 0,0.62819 -1.15172,-0.36804 -9.50111,-8.21841 z m -9.9632,-15.1707 -6.61223,-6.28501 6.87472,6.04503 c 6.38525,5.61463 7.30778,6.52498 6.61224,6.52498 -0.14437,0 -3.238,-2.82825 -6.87473,-6.285 z m -18.96901,-12.13657 -5.65974,-5.41811 5.92648,5.17425 c 5.50521,4.80644 6.3604,5.66197 5.65975,5.66197 -0.14671,0 -2.81363,-2.43815 -5.92649,-5.41811 z m -12.78847,-17.7714 -9.93956,-9.31915 10.19356,9.08694 c 5.60646,4.99782 10.19356,9.19143 10.19356,9.31915 0,0.62608 -1.21549,-0.43111 -10.44756,-9.08694 z m -8.5172,-2.38397 c -2.3033,-2.14557 -3.97446,-3.90103 -3.7137,-3.90103 0.26077,0 2.35864,1.75546 4.66194,3.90103 2.3033,2.14558 3.97446,3.90104 3.7137,3.90104 -0.26077,0 -2.35864,-1.75546 -4.66194,-3.90104 z M 67.53389,307.2033 c 0.684509,-0.25042 1.502365,-0.21962 1.817456,0.0684 0.315091,0.28806 -0.244962,0.49296 -1.244562,0.45531 -1.104643,-0.0416 -1.329335,-0.24701 -0.572894,-0.52374 z m 179.34372,-3.52557 -3.26779,-3.25087 3.55589,2.98748 c 3.30975,2.78067 3.99189,3.51425 3.26779,3.51425 -0.15846,0 -1.75861,-1.46289 -3.55589,-3.25086 z m 44.56719,-4.33449 -3.26779,-3.25087 3.55589,2.98748 c 3.30975,2.78067 3.99188,3.51426 3.26779,3.51426 -0.15846,0 -1.75861,-1.46289 -3.55589,-3.25087 z m 6.64908,-16.0376 c 2.32509,-2.26477 4.35195,-4.11777 4.50413,-4.11777 0.71201,0 -0.0408,0.77833 -4.22745,4.37072 l -4.50413,3.86481 z m -71.55234,-9.31915 c 0.32232,-0.4768 0.77422,-0.8669 1.0042,-0.8669 0.22999,0 0.41816,0.3901 0.41816,0.8669 0,0.47679 -0.4519,0.86689 -1.00421,0.86689 -0.55231,0 -0.74048,-0.3901 -0.41815,-0.86689 z m -3.24397,-15.24295 c 0.0455,-1.00989 0.27019,-1.2153 0.57289,-0.52375 0.27391,0.62579 0.24023,1.37349 -0.0748,1.66156 -0.3151,0.28806 -0.5392,-0.22396 -0.49803,-1.13781 z m 94.89865,-7.29639 c 0,-1.19198 0.21523,-1.67961 0.47828,-1.08362 0.26305,0.59599 0.26305,1.57125 0,2.16724 -0.26305,0.596 -0.47828,0.10837 -0.47828,-1.08362 z m -95.62792,-3.90104 c 0.006,-2.86076 0.18235,-3.92656 0.39338,-2.36844 0.21104,1.55812 0.20669,3.89874 -0.01,5.20139 -0.21637,1.30264 -0.38903,0.0278 -0.38371,-2.83295 z m 49.96278,0.97304 c 0,-0.18001 0.74674,-0.86269 1.65942,-1.51707 1.50396,-1.0783 1.5375,-1.04764 0.35801,0.32731 -1.23875,1.44403 -2.01743,1.90325 -2.01743,1.18976 z m 20.68344,-9.80075 c 0.6845,-0.25042 1.50237,-0.21963 1.81746,0.0684 0.31509,0.28806 -0.24497,0.49295 -1.24456,0.45531 -1.10465,-0.0416 -1.32934,-0.24701 -0.5729,-0.52374 z m 6.63767,-0.8669 c 0.6845,-0.25042 1.50236,-0.21963 1.81745,0.0684 0.31509,0.28806 -0.24496,0.49295 -1.24456,0.45531 -1.10465,-0.0416 -1.32933,-0.24701 -0.57289,-0.52374 z m -76.55462,-1.64729 c 0.0455,-1.0099 0.27019,-1.21531 0.57289,-0.52376 0.27391,0.62579 0.24023,1.37349 -0.0748,1.66156 -0.3151,0.28806 -0.5392,-0.22395 -0.49803,-1.1378 z m 31.16595,-8.81346 -3.26779,-3.25087 3.55589,2.98748 c 3.30975,2.78067 3.99188,3.51425 3.26779,3.51425 -0.15846,0 -1.75861,-1.46289 -3.55589,-3.25086 z m 37.26938,-3.44893 c 1.95574,-0.18702 5.15604,-0.18702 7.11178,0 1.95574,0.18703 0.35559,0.34005 -3.55589,0.34005 -3.91148,0 -5.51163,-0.15302 -3.55589,-0.34005 z m -2.31133,-5.16206 c 0.6845,-0.25042 1.50237,-0.21963 1.81746,0.0684 0.31509,0.28806 -0.24497,0.49295 -1.24456,0.45531 -1.10465,-0.0416 -1.32934,-0.24702 -0.5729,-0.52375 z m 11.31959,0.018 c 0.65191,-0.24049 1.71868,-0.24049 2.37059,0 0.65192,0.24048 0.11853,0.43725 -1.18529,0.43725 -1.30383,0 -1.83721,-0.19677 -1.1853,-0.43725 z m -48.17412,-11.34569 -3.26779,-3.25086 3.55589,2.98747 c 3.30975,2.78067 3.99188,3.51426 3.26779,3.51426 -0.15846,0 -1.75861,-1.46289 -3.55589,-3.25087 z m 83.49598,2.97961 c 0,-0.1492 1.3868,-1.41703 3.08178,-2.81742 l 3.08177,-2.54616 -2.78506,2.81742 c -2.59607,2.62623 -3.37849,3.21589 -3.37849,2.54616 z m -76.92823,-3.8465 c -1.17948,-1.37496 -1.14594,-1.40562 0.35802,-0.32731 0.91268,0.65438 1.65941,1.33706 1.65941,1.51707 0,0.71349 -0.77868,0.25427 -2.01743,-1.18976 z m 81.66942,-4.98467 c 1.76921,-1.66877 3.43009,-3.03414 3.69086,-3.03414 0.26076,0 -0.97342,1.36537 -2.74262,3.03414 -1.7692,1.66878 -3.43009,3.03415 -3.69086,3.03415 -0.26076,0 0.97342,-1.36537 2.74262,-3.03415 z m -88.30708,-1.08359 c -1.17949,-1.37495 -1.14595,-1.40561 0.35801,-0.3273 0.91268,0.65437 1.65942,1.33706 1.65942,1.51707 0,0.71349 -0.77868,0.25427 -2.01743,-1.18977 z m 95.56715,-6.4348 c 0.86819,-0.87704 1.83005,-1.34378 2.13748,-1.03719 0.30742,0.3066 0.0229,0.73242 -0.63225,0.94626 -0.65517,0.21384 -0.99397,0.68058 -0.7529,1.03718 0.24107,0.35661 -0.18474,0.64838 -0.94626,0.64838 -1.14367,0 -1.10993,-0.27747 0.19393,-1.59463 z M 191.8099,190.98105 c -1.17949,-1.37495 -1.14595,-1.40561 0.35801,-0.32731 0.91268,0.65438 1.65942,1.33706 1.65942,1.51707 0,0.7135 -0.77868,0.25427 -2.01743,-1.18976 z m 74.15838,-10.25828 c 0.0455,-1.0099 0.27019,-1.21531 0.57288,-0.52376 0.27392,0.62579 0.24024,1.37349 -0.0748,1.66156 -0.3151,0.28806 -0.53921,-0.22396 -0.49803,-1.1378 z m -30.34362,-4.33449 c 0.0455,-1.00989 0.27019,-1.21531 0.57289,-0.52376 0.27392,0.62579 0.24024,1.37349 -0.0748,1.66156 -0.31509,0.28806 -0.5392,-0.22395 -0.49803,-1.1378 z m 1.89648,-4.33449 c 0.0455,-1.00989 0.27019,-1.2153 0.57289,-0.52375 0.27391,0.62578 0.24023,1.37348 -0.0748,1.66155 -0.3151,0.28806 -0.53921,-0.22395 -0.49803,-1.1378 z m -1.41857,-4.57935 c -0.40847,-0.60423 -0.48659,-1.33271 -0.17361,-1.61885 0.84865,-0.77584 1.77394,0.36522 1.31558,1.62235 -0.32119,0.88092 -0.54455,0.88023 -1.14197,-0.003 z"
       id="path141" />
    <path
       style="display:inline;fill:#ff0000;stroke-width:0.906656"
       d="m 244.87468,300.93847 c -13.42973,-13.60342 -21.61053,-33.66168 -21.63951,-53.05731 -0.0265,-17.74328 4.02738,-25.93631 13.53091,-27.34622 10.80068,-1.60237 25.65417,11.23205 29.727,25.68614 l 1.67976,5.9613 4.31265,-3.26593 c 9.75066,-7.38407 20.65494,-11.04887 30.45707,-10.2363 9.77769,0.81056 15.09333,5.22233 15.10039,12.53273 0.0101,10.40759 -15.16371,30.36735 -30.88048,40.62056 -9.57715,6.24787 -29.91538,14.22826 -36.26112,14.22826 -0.53287,0 -3.24487,-2.30546 -6.02667,-5.12323 z"
       id="path137" />
    <path
       style="display:inline;fill:url(#meshgradient9719);fill-opacity:1;stroke-width:1.28682"
       d="m 236.02644,315.67696 c -19.06086,-19.30738 -30.67189,-47.77614 -30.71303,-75.30442 -0.0376,-25.18309 5.71608,-36.81149 19.20447,-38.81258 15.32944,-2.27424 36.41105,15.94169 42.19163,36.45643 l 2.38408,8.46089 6.12096,-4.63535 c 13.83915,-10.48023 29.31563,-15.68169 43.22782,-14.52841 13.87751,1.15043 21.42201,7.41207 21.43203,17.78774 0.0143,14.77153 -21.5219,43.10048 -43.82876,57.6529 -13.59288,8.86762 -42.459,20.19421 -51.46553,20.19421 -0.7563,0 -4.60545,-3.27214 -8.55367,-7.27141 z"
       id="path137-5"
       inkscape:transform-center-x="-56.421935"
       inkscape:transform-center-y="40.301383" />
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
